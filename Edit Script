<!-- Floating Flashcards Widget -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Floating Flashcards Widget</title>
  <style>
    /* Floating Button */
    #flashcards-launcher {
      position: fixed;
      bottom: 40px;
      right: 20px;
      background: #2563eb;
      color: white;
      border: none;
      border-radius: 50%;
      width: 60px;
      height: 60px;
      font-size: 26px;
      cursor: pointer;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      z-index: 9999;
    }

    /* Modal Overlay */
    #flashcards-modal {
      display: none;
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.6);
      z-index: 10000;
      justify-content: center;
      align-items: center;
    }

    /* Modal Content */
    #flashcards-box {
      background: white;
      padding: 20px;
      border-radius: 15px;
      width: 320px;
      max-width: 95%;
      box-shadow: 0 6px 16px rgba(0,0,0,0.3);
      text-align: center;
      animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: scale(0.9);}
      to { opacity: 1; transform: scale(1);}
    }

    /* Flashcard Style */
    #flashcard {
      width: 100%;
      height: 180px;
      margin: auto;
      perspective: 1000px;
      cursor: pointer;
    }
    #card-inner {
      position: relative;
      width: 100%; height: 100%;
      text-align: center;
      transition: transform 0.6s;
      transform-style: preserve-3d;
    }
    #question, #answer {
      position: absolute;
      width: 100%; height: 100%;
      backface-visibility: hidden;
      display: flex; align-items: center; justify-content: center;
      font-size: 18px; padding: 10px; border-radius: 12px;
    }
    #question { background: #2563eb; color: white; }
    #answer { background: #facc15; color: black; transform: rotateY(180deg); }

    /* Buttons */
    #flashcards-box button {
      padding: 8px 14px;
      margin: 6px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 14px;
    }
    #close-btn { background: #dc2626; color: white; }
    #prev-btn { background: #64748b; color: white; }
    #next-btn { background: #16a34a; color: white; }
  </style>
</head>
<body>

  <!-- Floating Button -->
  <button id="flashcards-launcher">ðŸ’¡</button>

  <!-- Modal -->
  <div id="flashcards-modal">
    <div id="flashcards-box">
      <h3>ðŸ’¡ Flashcards Learning App</h3>
      <div id="flashcard" onclick="flipCard()">
        <div id="card-inner">
          <div id="question"></div>
          <div id="answer"></div>
        </div>
      </div>
      <div style="margin-top:12px;">
        <button id="prev-btn" onclick="prevCard()">â¬… Prev</button>
        <button id="next-btn" onclick="nextCard()">Next âž¡</button>
      </div>
      <button id="close-btn" onclick="closeFlashcards()">âœ– Close</button>
    </div>
  </div>

  <script>
    // Flashcards Data
    const flashcards = [
      { question: "What does HTTP stand for?", answer: "HyperText Transfer Protocol" },
      { question: "What is the function of a web browser?", answer: "To retrieve, interpret, and display web content" },
      { question: "What is an API?", answer: "Application Programming Interface â€“ allows apps to communicate" },
      { question: "What is DNS?", answer: "Domain Name System" },
      { question: "What does AI stand for?", answer: "Artificial Intelligence" },
      { question: "What is Machine Learning?", answer: "AI systems that learn patterns from data" },
      { question: "What is NLP?", answer: "Natural Language Processing â€“ AI that understands human language" },
      { question: "Give an example of an AI tool", answer: "ChatGPT, Siri, MidJourney" },
      { question: "What is Computer Vision?", answer: "AI that interprets images and videos" },
      { question: "What does HTML stand for?", answer: "HyperText Markup Language" },
      { question: "Difference between Java & JavaScript?", answer: "Java = programming language, JS = web scripting" },
      { question: "What is CSS?", answer: "Cascading Style Sheets" },
      { question: "What is Git?", answer: "Version control system" },
      { question: "What is open-source software?", answer: "Software with public code, free to modify & share" },
      { question: "What is e-commerce?", answer: "Buying and selling products/services online" },
      { question: "What is dropshipping?", answer: "Selling online without holding inventory" },
      { question: "What is affiliate marketing?", answer: "Earning commissions by promoting products" },
      { question: "What is SEO?", answer: "Search Engine Optimization" },
      { question: "What is digital marketing?", answer: "Promoting products/services online" },
      { question: "What is SaaS?", answer: "Software as a Service â€“ cloud-based applications" }
    ];

    // State
    let currentIndex = 0;
    const cardInner = document.getElementById("card-inner");
    const question = document.getElementById("question");
    const answer = document.getElementById("answer");
    const modal = document.getElementById("flashcards-modal");

    // Load Card
    function loadCard(index) {
      question.textContent = flashcards[index].question;
      answer.textContent = flashcards[index].answer;
      cardInner.style.transform = "rotateY(0deg)";
    }
    function flipCard() {
      cardInner.style.transform = 
        cardInner.style.transform === "rotateY(180deg)" ? "rotateY(0deg)" : "rotateY(180deg)";
    }
    function nextCard() {
      currentIndex = (currentIndex + 1) % flashcards.length;
      loadCard(currentIndex);
    }
    function prevCard() {
      currentIndex = (currentIndex - 1 + flashcards.length) % flashcards.length;
      loadCard(currentIndex);
    }

    // Modal Controls
    document.getElementById("flashcards-launcher").onclick = () => {
      modal.style.display = "flex";
      loadCard(currentIndex);
    };
    function closeFlashcards() {
      modal.style.display = "none";
    }

    // Init
    loadCard(currentIndex);
  </script>
</body>
</html>
